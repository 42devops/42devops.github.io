---
layout: post
title: "6.824 分布式系统 02 - GFS"
date: 2021-04-01 11:45:19 +0800
categories: mit6824
comments: true
---
# 6.824 分布式系统 02 - GFS

# 为什么要使用分布式系统
1. parallelism  并行
2. fault tolerance 容错
3. physical 物理位置, 不同的基础设施
4. Security / isolation  安全和隔离故障

# 分布式系统的挑战
1. Concurrency 并发
2. partial failure 局部故障
3. performance 高性能


# 这个课程是关于 infrastructure - Abstractions 抽象
事实上整个计算机科学都是关于`Abstractions`的
- 存储
- 通讯模块
- 计算系统 例如 mapreduce

对于存储和计算, 我们目标是为了能过从分布式存储和计算基础结构中发现一些可抽象的东西并设计为接口以简化使用.

- RPC , Threads, concurrency control (locks)
- performance scalability (性能的可扩展性)-- 2X computer--> 2X thoughtput
- fault tolerance 大型分布式系统解决大型问题会导致极地的容错率或者非常罕见的故障问题, 故障会变得极为常见.
    常见的容错思想:
	- Availability 可用性, 某些系统是针对某些特定故障设计的, 并非所有故障, 当遇到这种故障时, 系统会继续运行.
	- Recoverability 可恢复性, 如果系统故障, 停止服务, 等待某人来修复故障, 故障修复完毕之前, 不做任何事.
		在这部分,有两个最重要的工具:
		 - 非易失性存储(NV Storage) , 假设 电源断电, 一些东西崩溃, 我们可以将系统状态的检查点活日志保存在硬盘,SSD,闪存中.
		 - Replication 复制副本
- consistency  (一致性)  因为分布式系统中, 性能和容错考虑不止有一份数据副本, 可能每个 K/V 有不同的版本.
	- `Put(k,v)`
	- `Get(k) -> v`

强一致性系统: 保证最新的一致性,但成本很高, 因为你必须跟他人进行大量的交流才能实现强一致性概念.
